// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model School_new {
  id        String   @id @default(uuid())
  name      String
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  classes   Class_new[]
}

model Class_new {
  id        String   @id @default(uuid())
  name      String
  schoolId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  school    School_new @relation(fields: [schoolId], references: [id])
  students  Student_new[]
  subjects  Subject_new[]
  classworks Classwork_new[]
  assignments Assignment_new[]
}

model Student_new {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  classId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  class     Class_new @relation(fields: [classId], references: [id])
  homeworks Homework_new[]
  notifications Notification_new[]
  fees      Fees_new[]
}

model Teacher_new {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Subject_new {
  id        String   @id @default(uuid())
  name      String
  classId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  class     Class_new @relation(fields: [classId], references: [id])
  homeworks Homework_new[]
}

model Homework_new {
  id          String   @id @default(uuid())
  title       String
  description String
  dueDate     DateTime
  studentId   String
  subjectId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  student     Student_new @relation(fields: [studentId], references: [id])
  subject     Subject_new @relation(fields: [subjectId], references: [id])
  files       HomeworkFile_new[]
}

model Classwork_new {
  id          String   @id @default(uuid())
  title       String
  description String
  dueDate     DateTime
  classId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  class       Class_new @relation(fields: [classId], references: [id])
  files       ClassworkFile_new[]
}

model Assignment_new {
  id          String   @id @default(uuid())
  title       String
  description String
  dueDate     DateTime
  classId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  class       Class_new @relation(fields: [classId], references: [id])
}

model Notification_new {
  id        String   @id @default(uuid())
  message   String
  studentId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  student   Student_new @relation(fields: [studentId], references: [id])
}

model Fees_new {
  id        String   @id @default(uuid())
  amount    Float
  dueDate   DateTime
  studentId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  student   Student_new @relation(fields: [studentId], references: [id])
  files     FeesFile_new[]
}

model FeeTemplate_new {
  id        String   @id @default(uuid())
  name      String
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model HomeworkFile_new {
  id          String   @id @default(uuid())
  filePath    String
  fileType    String
  fileName    String
  uploadedAt  DateTime @default(now())
  homeworkId  String
  homework    Homework_new @relation(fields: [homeworkId], references: [id])
}

model ClassworkFile_new {
  id          String   @id @default(uuid())
  filePath    String
  fileType    String
  fileName    String
  uploadedAt  DateTime @default(now())
  classworkId String
  classwork   Classwork_new @relation(fields: [classworkId], references: [id])
}

model FeesFile_new {
  id        String   @id @default(uuid())
  filePath  String
  fileType  String
  fileName  String
  uploadedAt DateTime @default(now())
  feesId    String
  fees      Fees_new @relation(fields: [feesId], references: [id])
}
